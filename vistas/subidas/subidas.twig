{% extends "master.twig" %}
{% block titulo %}Subidas
{% endblock %}
{% block contenido %}
    <main class="container-fluid" id="subidasApp">
        <div class="row">
            <div class="col-12">
                <h1 class="text-center">Subidas</h1>
            </div>
            <div class="col-12">
                <a class="btn btn-success mb-2" href="{{ URL_RAIZ }}/subidas/agregar">Agregar</a>
            </div>
            <div class="col-12">
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Título</th>
                            <th style="max-width:300px;">Descripción</th>
                            <th>Fecha</th>
                            <th>Opciones</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% verbatim %}
                        <tr v-for="(subida, indice) in subidas" :key="indice">
                            <td>{{ subida.titulo }}</td>
                            <td style="max-width:300px;">{{ subida.descripcion }}</td>
                            <td>{{ subida.fecha }}</td>
                            <td>
                                <a title="Editar" href="#" class="btn btn-info mt-2" @click="detallesDe(subida.id)">
                                    <i class="fa fa-pen"></i>
                                </a>
                                <a title="Copiar enlace" href="#" class="btn btn-success mt-2" @click="copiar(subida)">
                                    <i class="fa fa-copy"></i>
                                </a>
                                <a title="Abrir en nueva pestaña" href="#" class="btn btn-success mt-2" @click="abrirEnTab(subida)">
                                    <i class="fa fa-external-link-alt"></i>
                                </a>
                                <a title="Eliminar" href="#" class="btn btn-danger mt-2" @click="eliminar(subida)">
                                    <i class="fa fa-trash"></i>
                                </a>
                            </td>
{% endverbatim %}
                        </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </main>
    <script type="text/javascript">
        new Vue({
            el: "#subidasApp",
            data: () => ({
                subidas: [],
            }),
            methods: {
                obtenerSubidas() {
                    return ParzibyteHttp.get("/subidas/json")
                        .then(subidas => {
                            this.subidas = subidas;
                        })
                },
                detallesDe(idSubida) {
                    window.location.href = `${window.URL_RAIZ}/subida/${idSubida}/editar`;
                },
                copiarTexto(texto) {
                    if (!navigator.clipboard) {
                        this.copiarSiNoSoporta(texto);
                        return;
                    }
                    navigator.clipboard.writeText(texto)
                        .then(() => {
                            Vue.toasted.success("Enlace copiado al portapapeles", {
                                duration: 1000
                            });
                        })
                        .catch(error => {
                            this.copiarSiNoSoporta(texto);
                        });
                },
                copiarSiNoSoporta(texto) {
                    prompt("Presiona CTRL + C y después Enter", texto);
                },
                copiar(subida) {
                    let enlace = this.enlaceAPartirDeToken(subida);
                    this.copiarTexto(enlace)
                },
                abrirEnTab(subida) {
                    let enlace = this.enlaceAPartirDeToken(subida);
                    window.open(enlace)
                },
                enlaceAPartirDeToken(subida) {
                    return window.URL_RAIZ + `/${subida.token}`;
                },
                eliminar(subida) {
                    Swal.fire({
                        title: subida.titulo,
                        html: "Todos los enlaces y configuraciones se van a eliminar. Esto no se puede deshacer<br><strong>¿Eliminar?</strong>",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: "Sí, eliminar",
                        cancelButtonText: "Cancelar",
                    }).then((result) => {
                        if (!result.value) return;
                        ParzibyteHttp.delete("/subida/" + subida.id)
                            .then(r => {
                                if (r) {
                                    Vue.toasted.success("Eliminada correctamente", {
                                        duration: 1500
                                    });
                                } else {
                                    Vue.toasted.error("Error eliminando. Reintente", {
                                        duration: 1500
                                    });
                                }
                                this.obtenerSubidas();
                            });
                    })
                }
            },
            mounted() {
                this.obtenerSubidas();
            }
        });
    </script>
{% endblock %}
